// nuxt.config.ts
import { defineNuxtConfig } from 'nuxt/config'
import { fileURLToPath } from 'node:url'

export default defineNuxtConfig({
  devtools: { enabled: true },

  components: [{ path: '~/components', pathPrefix: false }],

  // Tailwind + PostCSS
  css: ['~/assets/css/tailwind.css', '~/assets/css/fonts.css'],
  postcss: { plugins: { tailwindcss: {}, autoprefixer: {} } },

  // Runtime config
  runtimeConfig: {
    public: {
      mapboxToken: process.env.MAPBOX_TOKEN || '',
      requireAuth: false, // keep OFF during dev if you want the page to render signed-out
    },
  },

  // ✅ Use the official Nuxt Supabase module
  modules: ['@nuxtjs/supabase'],

  // Nuxt Supabase module config (reads from here OR from .env automatically)
  // Prefer setting these env vars in .env:
  //   NUXT_PUBLIC_SUPABASE_URL=...
  //   NUXT_PUBLIC_SUPABASE_ANON_KEY=...
  // If you want to be explicit, uncomment url/key below.
  supabase: {
    // url: process.env.NUXT_PUBLIC_SUPABASE_URL,
    // key: process.env.NUXT_PUBLIC_SUPABASE_ANON_KEY,
    redirect: false, // don't auto-redirect on protected routes
    cookieOptions: {
      sameSite: 'lax',
    },
  },

  // ❌ Remove mock aliasing so real auth works
  nitro: {
    storage: {
      data: { driver: 'fs', base: '.data' },
    },
    // No '#supabase/server' alias here anymore
  },

  // Vite alias (keep project aliases only)
  vite: {
    resolve: {
      alias: {
        '~': fileURLToPath(new URL('./', import.meta.url)),
        '@': fileURLToPath(new URL('./', import.meta.url)),
      },
    },
    server: {
      fs: { strict: false },
    },
  },

  typescript: {
    tsConfig: {
      compilerOptions: {
        types: ['@types/node', 'vite/client', './types/nuxt.d.ts'],
      },
    },
  },

  compatibilityDate: '2025-09-01',

  app: {
    head: {
      title: 'Xplor',
      htmlAttrs: { class: 'dark bg-black' },
      bodyAttrs: { class: 'bg-black text-white' },
      meta: [
        { name: 'viewport', content: 'width=device-width, initial-scale=1' },
        { name: 'theme-color', content: '#000000' },
      ],
      link: [
        { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' },
      ],
    },
  },
})
